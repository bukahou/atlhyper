# =========================
# 阶段 1：构建前端（Vue）
# =========================
FROM node:20-alpine AS webbuilder

WORKDIR /web

# ✅ 安装 git，解决某些依赖可能使用 git+https
RUN apk add --no-cache git

# ✅ 一次性拷贝所有 web 目录内容，避免脚本缺失导致缓存错乱
COPY ./web ./ 

# ✅ 安装依赖并构建
RUN npm install --legacy-peer-deps && npm run build


# =========================
# 阶段 2：构建后端（Go）
# =========================
FROM golang:1.24.2-alpine AS gobuilder

# ✅ 安装编译和数据库依赖
RUN apk add --no-cache gcc musl-dev sqlite-dev

WORKDIR /app

COPY go.mod go.sum ./
RUN go mod download

COPY . .

ENV CGO_ENABLED=1

RUN go build -o neurocontroller ./cmd/neurocontroller/main.go

# =========================
# 阶段 3：最终运行镜像
# =========================
FROM alpine:latest

RUN apk add --no-cache sqlite-libs

WORKDIR /root/

# 拷贝后端可执行文件
COPY --from=gobuilder /app/neurocontroller .

# 拷贝前端构建后的产物（注意：只拷贝 dist）
COPY --from=webbuilder /web/dist ./web/dist

# 设置启动权限
RUN chmod +x ./neurocontroller

EXPOSE 8081

ENTRYPOINT ["./atlhyper-controller"]
